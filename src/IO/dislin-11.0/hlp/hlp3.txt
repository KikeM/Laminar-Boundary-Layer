Name: DISINI  1
DISINI initializes  DISLIN  by setting  default  parameters  and 
creating a plot file. The level is set to 1.
The call is:  CALL DISINI                                level 0
         or:  void disini (); 
Name: DISFIN  2
DISFIN  terminates DISLIN and prints a messag on the screen. The
level is set back to 0.
The call is:  CALL DISFIN                          level 1, 2, 3
         or:  void disfin (); 
Name: MESSAG  3
MESSAG plots text.
The call is:  CALL MESSAG (CSTR, NX, NY)           level 1, 2, 3
         or:  void messag (const char *cstr, int nx, int ny);
CSTR          is a character string (<= 256 characters).
NX, NY        are the plot coordinates of the upper left corner.
Name: NUMBER  3
NUMBER plots a floating point number or integer.
The call is:  CALL NUMBER (X, NDIG, NX, NY)        level 1, 2, 3
         or:  void number (float x, int ndig, int nx, int ny); 
X             is a floating point number.
NDIG          is the number  of digits plotted after the decimal
              point.  If NDIG = -1,  X will be plotted as an in-
              teger. The last digit of X will be rounded up.
NX, NY        are the plot coordinates of the upper left corner.
Name: RLMESS  3
RLMESS  plots text where the position is specified by user coor-
dinates.
The call is:  CALL RLMESS (CSTR, XP, YP)              level 2, 3
         or:  void rlmess (const char *cstr, float xp, 
                                                      float yp); 
CSTR          is a character string (<= 132 characters).
XP, YP        are the user coordinates of the upper left corner.
Name: RLNUMB  3
RLNUMB plots floating point numbers where the position is speci-
fied by user coordinates.
The call is:  CALL RLNUMB (X, N, XP, YP)              level 2, 3
         or:  void rlnumb (float x, int n, float xp, float yp); 
X             is a floating point number.
N             is the number of digits  plotted after the decimal
              point. If N = -1, X will be plotted as an integer.
              The last digit of X will be rounded up.
XP, YP        are the user coordinates of the upper left corner.
Name: SYMBOL  5
The routine SYMBOL plots symbols.
The call is:  CALL SYMBOL (NSYM, NX, NY)           level 1, 2, 3
         or:  void symbol (int nsym, int nx, int ny); 
NSYM          is a symbol number between 0 and 23.
NX, NY        is the centre of the symbols in plot coordinates.
Name: RLSYMB  5
RLSYMB plots a symbol  where the centre is specified by user co-
ordinates.
The call is:  CALL RLSYMB (NSYM, XP, YP)             level  2, 3
         or:  void rlsymb (int nsym, float xp, float yp);
NSYM          is a symbol number between 0 and 21.
XP, XP        is the centre of the symbol in user coordinates.
Name: SYMROT  5
SYMROT defines a rotation angle for symbols.
The call is:  CALL SYMROT (ANGLE)                  level 1, 2, 3
         or:  void symrot (float angle); 
ANGLE         is the  rotation angle in degrees. Symbols are ro-
              tated in an anti-clockwise direction.
Name: PAGERA  1
PAGERA plots a border around the page.
The call is:  CALL PAGERA                          level 1, 2, 3
         or:  void pagera (); 
Name: PAGFLL  1
The routine PAGFLL fills the page with a colour.
The call is:  CALL PAGFLL (NCLR)                   level 1, 2, 3
         or:  void pagfll (int nclr);  
NCLR          is a colour value.
Name: PAGHDR  1
PAGHDR plots a page  header at a corner of the page.  The header
line contains date, time and user-defined information.
The call is:  CALL PAGHDR (C1, C2, IOPT, IDIR)     level 1, 2, 3
         or:  void paghdr (const char *c1, const char *c2, 
                                            int iopt, int idir);  
C1            is a character string preceding the header line.
C2            is a character string following the header line.
IOPT          is the page corner where the header is plotted:
         = 1  is the lower left  corner.
         = 2  is the lower right corner.
         = 3  is the upper right corner.
         = 4  is the upper left  corner.
IDIR          is the direction of the header line.
         = 0  is horizontal.
         = 1  is vertical.
Note:         The character size of the header line is  0.5 * NH
              where NH is the parameter used in HEIGHT.
Name: SYMFIL  1
A metafile can be converted with a driver  program and sent from
the operating system to several devices. From within a user pro-
gram, the SYMFIL routine is used for this purpose.
The call is:  CALL SYMFIL (CDEV, CSTAT)                  level 0
         or:  void symfil (const char *cdev, const char *cstat); 
CDEV          is the name of the device.  'CONS'  refers  to the
              graphics screen,  'XWIN'  to an X Window terminal,
              'PSCi' to a PostScript printer,  'KYOi'  to a Kyo-
              cera laser printer with Prescribe, 'HPLi' to a HP-
              plotter and 'METi' to output for a colour graphics
              system,  where i = 1, 2, 3, ..., n is the  printer
              number. The keyword 'NONE' deletes a metafile with
              no device plotting.
CSTAT         is a status parameter and can have the values 'DE-
              LETE' and 'KEEP'.
Name: INCFIL  1
The routine INCFIL includes a GKSLIN or CGM metafile created  by
DISLIN, or general PNG, BMP, GIF and TIFF files into a graphics.
The call is:  CALL INCFIL (CFIL)                   level 1, 2, 3
         or:  void incfil (const char *cfil);
CFIL          is a character string that contains the filename.
Notes:      - For including  PNG,  BMP,  GIF and TIFF files, the 
              output format must be a raster,  PostScript or PDF
              format.  
            - The routine FILBOX (NX, NY, NW, NH) defines a rec-
              tangular  area  on the page where the file will be
              included. (NX, NY) are the plot coordinates of the
              upper  left  corner,  (NW, NH)  are the width  and 
              length of the box in plot coordinates. By default, 
              the entire page  will  be used.  If the  file is a
              bitmap  and the output format a raster format, the
              file will be included at the point  (NX, NY) while
              NW and NH will be  ignored  by default. This means
              that images are copied 1:1 to the screen. With the 
              option  FILOPT  ('ON',  'SCALE'),  images  will be 
              scaled. If the output format is PostScript or PDF,
              the  image file is  always  scaled  into  the  box
              defined by the parameters  NX,  NY, NW and NH. 
              Therefore, NW and NH should have the same ratio as
              the width and height of the image file. 
            - INCFIL draws  by default a frame around the inclu-
              ded file  that  can be  modified  with the routine 
              FRAME. 
	    - With the statement  CALL FILCLR  ('NONE'),  colour
              values in GKSLIN and CGM metafiles will be ignored
              and the current  colour is used.  The  default  is 
              FILCLR ('ALL').
Name: FILBOX  1
The routine FILBOX defines a rectangular area on the page  where
metafiles will be included by the routine INCFIL.
The call is:  CALL FILBOX (NX, NY, NW, NH)         level 1, 2, 3
         or:  void filbox (int nx, int ny, int nw, int nh);
NX, NY        are the plot coordinates of the upper left corner.
NW, NH        are the width  and length of the box in plot coor-
              dinates.
                          Default: The entire page will be used.
Name: FILWIN  1
The routine FILWIN defines a rectangular area off an image, that
will included by INCFIL instead of the complete image.
The call is:  CALL FILWIN (NX, NY, NW, NH)         level 1, 2, 3
         or:  void filwin (int nx, int ny, int nw, int nh);
NX, NY        are the pixel coordinates of the upper left corner
              of the image.
NW, NH        are the width and length of the image in pixels.
                   Default: The complete image will be included.
Name: FILCLR  1
The routine  FILCLR can be used to ignore colour values in meta-
files included with the routine INCFIL.
The call is:   CALL FILCLR (CMOD)                  level 1, 2, 3
         or:   void filclr (const char *cmod); 
CMOD           is a character  string  that can have  the values
               'ALL' and 'NONE'.          Default: CMOD = 'ALL'.
Name: FILSIZ  1
The routine FILSIZ returns the size on an image file.
The call is:  CALL FILSIZ (CFIL, NWIDTH, NHEIGT, IRET)
                                                level 0, 1, 2, 3
         or:  int  filsiz (const char *cfil, int *nwidth, 
                                                  int *nheight);
CFIL          is a  character string that contains the filename.
NWIDTH        is the returned width of the image in pixel.
NHEIGHT       is the returned height of the image in pixel.
IRET          contains a returned  status  that can have the  
              values: 
                1: BMP file, 2: GIF file, 3: TIFF file, 
                4: PNG file, 0: undefined format, -1: error. 
Name: FILTYP  1
The routine FILTYP returns the type on a file.
The call is:  CALL FILTYP (CFIL, ITYP)          level 0, 1, 2, 3
         or:  int  filtyp (const char *cfil); 
CFIL          is a  character string that contains the filename.
ITYP          contains  a  returned  status  thatcan  have  the 
              values: 
                1: BMP file,    2: GIF file, 3: TIFF file, 
                4: PNG file,    5: Dislin Image, 6: GKSL,
                7: CGM,         8: WMF,      9: HPGL,
               10: PostScript, 11: PDF,     12: Aldus WMF,
                0: unknown format, -1: error. 
