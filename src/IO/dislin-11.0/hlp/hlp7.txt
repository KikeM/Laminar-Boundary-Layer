Name: GETPAG  16
This routine returns the page size (see SETPAG, PAGE).
The call is:  CALL GETPAG (NXPAG, NYPAG)           level 1, 2, 3
         or:  void getpag (int *nxpag, int *nypag);
Name: GETMFL  16
GETMFL returns the file format (see METAFL).
The call is:  CALL GETMFL (CDEV)                   level 1, 2, 3
         or:  char *getmfl (); 
CDEV          is a character variable containing the file format.
Name: GETFIL  16
The routine GETFIL returns the current plot file name.
The call is:  CALL GETFIL (CFIL)                   level 1, 2, 3
         or:  char *getfil ();
Name: GETLIN  16
The routine GETLIN returns the current line width.
The call is:  CALL GETLIN (NWIDTH)                 level 1, 2, 3
         or:  int  getlin ();
Name: GETPAT  16
The routine GETPAT returns the current shading pattern.
The call is:  CALL GETPAT (NPAT)                   level 1, 2, 3
         or:  int  getpat ();
Name: GETANG  16
The routine  GETANG returns the  current angle used for text and
numbers.
The call is:  CALL GETANG (NANG)                   level 1, 2, 3
         or:  int  getang ();
Name: GETGRF  16
The routine  GETGRF  returns the current  scaling defined  in an
axis system. 
The call is:  CALL GETGRF (XA, XE, XOR, XSTP, CAX)    level 2, 3
         or:  void getgrf (float *xa,  float *xe, float *xor, 
                                  float *xstp, const char *cax);
XA, XE        are the lower and upper limits of the axis.
XOR, XSTP     are the first axis label  and the step between la-
              bels.
CAX           selects the axis and can have the values  'X', 'Y'
              and 'Z'.
Name: GETOR   16
GETOR returns the coordinates of the origin (see ORIGIN).
The call is:  CALL GETOR (NX0, NY0)                level 1, 2, 3
         or:  void getor (int *nx0, int *ny0);
Name: GETPOS  16
This routine returns the position of the lower left corner of an
axis system in plot coordinates (see AXSPOS).
The call is:  CALL GETPOS (NXA, NYA)               level 1, 2, 3
         or:  void getpos (int *nxa, int *nya);
Name: GETLEN  16
GETLEN returns the length of the  X-, Y- and Z-axes (see AXSLEN,
AX3LEN).
The call is:  CALL GETLEN (NXL, NYL, NZL)          level 1, 2, 3
         or:  void getlen (int *nxl, int *nyl, int *nzl);
Name: GETHGT  16
GETHGT returns the character height (see HEIGHT).
The call is:  CALL GETHGT (NHCHAR)                 level 1, 2, 3
         or:  int  gethgt ();
Name: GETHNM  16
GETHNM returns the character height of axis titles (see HNAME).
The call is:  CALL GETHNM (NHCHAR)                 level 1, 2, 3
         or:  int  gethnm ();
Name: GETALF  16
GETALF returns the base alphabet format (see BASALF).
The call is:  CALL GETALF (CALF)                   level 1, 2, 3
         or:  char *getalf (); 
CALF          is a  character  variable  containing the returned
              base alphabet.
Name: GETMIX  16
GETMIX returns control characters used for plotting  indices and
exponents (see SETMIX, NEWMIX).
The call is:  CALL GETMIX (CHAR, CMIX)             level 1, 2, 3
         or:  char *getmix (const char *cmix); 
CHAR          is a character string  containing the control cha-
              racter.
CMIX          is a character string that defines the function of
              the control character.  CMIX can  have the  values 
              'EXP', 'IND',  'RES' and 'LEG' for exponents,  in-
              dices,  resetting the base-line, and for  multiple
              text lines in legends.
Name: GETSHF  16
GETSHF returns shift characters used for plotting  special Euro-
pean characters (see EUSHFT).
The call is:  CALL GETSHF (CNAT, CHAR)             level 1, 2, 3
         or:  char *getshf (const char *cnat); 
CNAT          is a  character  string  that  can have the values
              'GERMAN', 'FRENCH', 'SPANISH',  'DANISH', 'ACUTE', 
              'GRAVE' and 'CIRCUM'.
CHAR          is a  character  string  containing  the  returned 
              shift character.
Name: GMXALF  16
GMXALF returns  shift  characters used for shifting  between the
base and an alternate alphabet (see SMXALF).
The call is:  CALL GMXALF (CALPH, C1, C2, N)       level 1, 2, 3
         or:  int gmxalf (const char *calph, char *c1, 
                                                      char *c2); 
CALPH         is a character string  containing an alphabet.  In
              addition to the names in  BASALF,  CALPH can  have
              the value 'INSTRUCTION'.
C1, C2        are characters strings  that  contain the returned
              shift characters.
N             is the  returned index of the alphabet  between  0 
              and 6. If N = 0,  no shift characters  are defined
              for the alphabet CALPH.
Name: GETDIG  16
This routine returns the  number of decimal places that are dis-
played in axis labels (see LABDIG).
The call is:  CALL GETDIG (NXDIG, NYDIG, NZDIG)    level 1, 2, 3
         or:  void getdig (int *nxdig, int *nydig, int *nzdig);
Name: GETTIC  16
GETTIC returns the number of ticks that are plotted between axis
labels (see TICKS).
The call is:  CALL GETTIC (NXTIC, NYTIC, NZTIC)    level 1, 2, 3
         or:  void gettic (int *nxtic, int *nytic, int *nztic);
Name: GETTCL  16
GETTCL returns tick lengths (see TICLEN).
The call is:  CALL GETTCL (NMAJ, NMIN)             level 1, 2, 3
         or:  void gettcl (int *nmaj, int *nmin);
Name: GETSP1  16
GETSP1 returns the distance  between axis ticks  and labels (see
LABDIS).
The call is:  CALL GETSP1 (NXDIS, NYDIS, NZDIS)    level 1, 2, 3
         or:  void getsp1 (int *nxdis, int *nydis, int *nzdis);
Name: GETSP2  16
GETSP2 returns the distance  between axis labels and names  (see
NAMDIS).
The call is:  CALL GETSP2 (NXDIS, NYDIS, NZDIS)    level 1, 2, 3
         or:  void getsp2 (int *nxdis, int *nydis, int *nzdis);
Name: GETSCL  16
This routine returns the type of axis scaling used.  For  linear
scaling,  the value 0  is returned  and for logarithmic scaling,
the value 1 is returned (see AXSSCL).
The call is:  CALL GETSCL (NXLOG, NYLOG, NZLOG)    level 1, 2, 3
         or:  void getscl (int *nxlog, int *nylog, int *nzlog);
Name: GETSCM  16
This routine informs if automatic scaling is used in a GRAF rou-
tine.  (see SETSCL).  A returned  value  of  1  means  automatic 
scaling, otherwise 0 is returned.
The call is:  CALL GETSCM (IX, IY, IZ)             level 1, 2, 3
         or:  void getscm (int *ix, int *iy, int *iz);
Name: GETLAB  16
GETLAB  returns  the label types  used  for axis numbering  (see
LABELS).
The call is:  CALL GETLAB (CXLAB, CYLAB, CZLAB)    level 1, 2, 3
         or:  void getlab (char *cxlab, char *cylab,
                                                   char *czlab);
Name: GETCLR  16
GETCLR returns  the current  colour as an index  from the colour
table (see SETCLR).
The call is:  CALL GETCLR (NCOL)                   level 1, 2, 3
         or:  int  getclr ();
Name: GETUNI  16
GETUNI returns the logical unit used for error messages.
The call is:  CALL GETUNI (NU)                     level 1, 2, 3
         or:  FILE *getuni ();
Name: GETVER  16
GETVER returns  the version number  of the currently used DISLIN
library.
The call is:  CALL  GETVER (XVER)                  level 1, 2, 3
         or:  float getver ();
Name: GETLEV  16
GETLEV returns the level.
The call is:  CALL GETLEV (NLEV)                level 0, 1, 2, 3
         or:  int  getlev ();
Name: GETSYM  16
GETSYM returns the current symbol number and height of symbols.
The call is:  CALL GETSYM (NSYM, NHSYMB)           level 1, 2, 3
         or:  void getsym (int *nsym, int *nhsymb);
Name: GETTYP  16
GETTYP returns the current line style (see LINTYP).
The call is:  CALL GETTYP (NTYP)                   level 1, 2, 3
         or:  int  gettyp ();
Name: GETRES  16
GETRES returns the width and height of rectangles plotted in 3-D
colour graphics (see SETRES, AUTRES).
The call is:  CALL GETRES (NPB, NPH)               level 1, 2, 3
         or:  void getres (int *npb, int *nph);
Name: GETVLT  16
GETVLT returns the current colour table (see SETVLT).
The call is:  CALL  GETVLT (CVLT)                  level 1, 2, 3
         or:  char *getvlt ();
Name: GETIND  16
For a colour index, the routine GETIND returns the corresponding
RGB coordinates stored  in the  current colour table.  (see SET-
IND). If an explicit RGB value is specified,  GETIND retuns  the
RGB coordinates of the RGB value.
The call is:  CALL GETIND (I, XR, XG, XB)          level 1, 2, 3
         or:  void getind (int i, float *xr, float *xg,
                                                     float *xb);
Name: GETRGB  16
GETRGB returns the RGB coordinates of the current colour.
The call is:  CALL GETRGB (XR, XG, XB)             level 1, 2, 3
         or:  void getrgb (float *xr, float *xg, float *xb);
Name: GETSCR  16
GETSCR returns the width and height of the screen in pixels.
The call is:  CALL GETSCR (NWPIX, NHPIX)        level 0, 1, 2, 3
         or:  void getscr (int *nwpix, int *nhpix);
Name: GETBPP  16
GETBPP returns  the number  of bits  per  pixel used by graphics
card.
The call is:  CALL GETBPP (NBPP)                level 0, 1, 2, 3
         or:  int getbpp ();
Name: GETDSP  16
The routine GETDSP returns the terminal type.
The call is:  CALL GETDSP  (CDSP)
         or:  char *getdsp ();
CDSP          is a  returned character string that can have the
              values 'XWIN' for X Window terminals,  'WIND' for
              Windows terminals and 'NONE' for none of them.
Name: GETRAN  16
GETRAN returns the colour range of colour bars (see COLRAN).
The call is:  CALL GETRAN (NCA, NCE)               level 1, 2, 3
         or:  void getran (int *nca, int *nce);
Name: GETWID  16
GETWID returns the width of the colour bar plotted in 3-D colour
graphics (see BARWTH).
The call is:  CALL GETWID (NZB)                    level 1, 2, 3
         or:  int  getwid ();
Name: GETVK   16
This routine  returns the  lengths  used for shifting titles and
colour bars (see VKYTIT, VKXBAR, VKYBAR).
The call is:  CALL GETVK (NYTIT, NXBAR, NYBAR)     level 1, 2, 3
         or:  void getvk (int *nytit, int *nxbat, int *nybar);
Name: GETWIN  16
This routine returns the  upper left corner and  the size of the
graphics window.
The call is:  CALL GETWIN (NX, NY, NW, NH)         level 1, 2, 3
         or:  void getwin (int *nx, int *ny, int *nw, int *nh);
NX, NY        contain the upper  left corner in screen coordina-
              tes.
NW, NH        are the width  and height  of the window in screen
              coordinates. 
Name: GETCLP  16
The routine GETCLP returns the current clipping window.
The call is:  CALL GETCLP (NX, NY, NW, NH)         level 1, 2, 3
         or:  void getclp (int *nx, int *ny, int *nw, int *nh);
NX, NY        are the plot coordinates of the upper left corner.
NW, NH        are the width and height in plot coordinates.
Name: GETXID  16
The routine GETXID returns the ID of the current X graphics win-
dow. 
The call is:  CALL GETXID (ID, CTYPE)              level 1, 2, 3
         or:  int  getxid (const char *ctype); 
ID            is the returned window ID. 
CTYPE         is a character string  that  can  have  the values
              'WINDOW' and 'PIXMAP'.
